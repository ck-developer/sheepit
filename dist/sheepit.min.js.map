{"version":3,"sources":["sheepit.js"],"names":["$","jQuery","fn","sheepIt","options","add","addForm","addN","addNButton","addNForms","addNInput","canAddForm","canRemoveAllForms","canRemoveForm","clickOnAdd","clickOnAddN","clickOnRemoveAll","clickOnRemoveCurrent","clickOnRemoveLast","cloneTemplate","controls","count","current","defaults","extendControl","extendForm","extendSource","fillData","fillForm","fillFormField","first","formFields","forms","getCurrentForm","getFirstForm","getForm","getForms","getFormsCount","getIndex","getIndexForPosition","getLabelForForm","getLastForm","getNextForm","getOptions","getOrSetTemplate","getPositionForIndex","getPreviousForm","getSeparator","hasForms","hasSeparator","initialize","ip","isInDom","last","next","noFormsTemplate","normalizeAll","normalizeControls","normalizeFieldsForForm","normalizeForm","normalizeForms","normalizeLabelsForForm","normalizeOptions","previous","removeAll","removeAllForms","removeCurrent","removeCurrentForm","removeForm","removeLast","removeLastForm","setLabelForForm","setOptions","setPointerTo","source","template","templateForm","this","clone","beforeClone","cloneWithAttribut","afterClone","getSource","event","preventDefault","value","attr","beforeRemoveCurrent","removeCurrentConfirmation","confirm","removeCurrentConfirmationMsg","data","afterRemoveCurrent","removeLastConfirmation","removeLastConfirmationMsg","removeAllConfirmation","removeAllConfirmationMsg","element","attrname","att","unescape","escape","form","index","find","each","idAttr","idTemplateAttr","nameAttr","nameTemplateAttr","newIdAttr","newNameAttr","that","replace","indexFormat","label","labelSelector","html","removeCurrents","hideIf","showIf","allowRemoveCurrent","removeCurrentSelector","show","hide","css","continuousIndex","idTemplate","re","indexOf","RegExp","normalizeAllafterAdd","id","lastForm","nestedForm","nestedForms","newForm","removeCurrentBtn","separator","x","beforeAdd","remove","click","insertAfter","insertNewForms","insertBefore","length","isNestedForm","parentForm","push","afterAdd","n","normalize","parseFloat","formToRemove","i","init","position","activeForms","maxFormsCount","minFormsCount","object","values","afterFill","field","fieldsToFill","formId","formIndex","mf","mv","filter","inject","type","text","newOptions","extend","b","addSelector","addNSelector","addNInputSelector","addNButtonSelector","removeLastSelector","removeAllSelector","controlsSelector","allowAdd","allowAddN","allowRemoveLast","allowRemoveAll","formTemplateSelector","noFormsTemplateSelector","pregeneratedForms","iniFormsCount","control","allowControlOption","onClickFunction","onClickSubControl","duration","callback","getAddControl","getAddNControl","getRemoveLastControl","getRemoveAllControl","getOption","option","setOption","getAllForms","val","removeFirstForm","proxy","setLabel","newLabel","getLabel","getNestedForms","getNestedForm","getPosition","incrementCount","noFormsMsg","withDataAndEvents","support","noCloneEvent"],"mappings":"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","file":"sheepit.min.js","sourcesContent":["\n/**\n * SheepIt! Jquery Plugin\n * http://www.mdelrosso.com/sheepit/\n#\n * @version 1.1.1\n#\n * Created By Mariano Del Rosso (http://www.mdelrosso.com)\n#\n * Thanks to:\n *  Hubert Galuszka: Continuous index option and support for tabular forms\n *  Gabriel Alonso: Bugfixes\n#\n * @license\n * \n * SheepIt is free software: you can redistribute it and/or modify\n * it under the terms of the MIT license\n * \n * SheepIt is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * MIT license for more details.\n * \n * You should have received a copy of the MIT license\n * along with SheepIt.  If not, see <http://en.wikipedia.org/wiki/MIT_License>.\n */\n(function($) {\n  jQuery.fn.sheepIt = function(options) {\n\n    /**\n     * Gets the first element of the collection and decorates with jquery\n     */\n    var add, addForm, addN, addNButton, addNForms, addNInput, canAddForm, canRemoveAllForms, canRemoveForm, clickOnAdd, clickOnAddN, clickOnRemoveAll, clickOnRemoveCurrent, clickOnRemoveLast, cloneTemplate, controls, count, current, defaults, extendControl, extendForm, extendSource, fillData, fillForm, fillFormField, first, formFields, forms, getCurrentForm, getFirstForm, getForm, getForms, getFormsCount, getIndex, getIndexForPosition, getLabelForForm, getLastForm, getNextForm, getOptions, getOrSetTemplate, getPositionForIndex, getPreviousForm, getSeparator, hasForms, hasSeparator, initialize, ip, isInDom, last, next, noFormsTemplate, normalizeAll, normalizeControls, normalizeFieldsForForm, normalizeForm, normalizeForms, normalizeLabelsForForm, normalizeOptions, previous, removeAll, removeAllForms, removeCurrent, removeCurrentForm, removeForm, removeLast, removeLastForm, setLabelForForm, setOptions, setPointerTo, source, template, templateForm;\n    source = $(this).first();\n\n    /**\n     * Clone the form template\n     */\n    cloneTemplate = function() {\n      var clone;\n      clone = void 0;\n      if (typeof options.beforeClone === 'function') {\n        options.beforeClone(source, template);\n      }\n      clone = template.cloneWithAttribut(true);\n      if (typeof options.afterClone === 'function') {\n        options.afterClone(source, clone);\n      }\n      clone.getSource = function() {\n        return source;\n      };\n      return clone;\n    };\n\n    /**\n     * Handle click on addForm button\n     */\n    clickOnAdd = function(event) {\n      event.preventDefault();\n      addForm();\n    };\n\n    /**\n     * Handle click on addNForm button\n     */\n    clickOnAddN = function(event) {\n      event.preventDefault();\n      if (addNInput.value !== '') {\n        addNForms(addNInput.attr('value'));\n      }\n    };\n\n    /**\n     * Handle click on Remove current button\n     */\n    clickOnRemoveCurrent = function(event) {\n      event.preventDefault();\n      if (typeof options.beforeRemoveCurrent === 'function') {\n        options.beforeRemoveCurrent(source);\n      }\n      if (options.removeCurrentConfirmation) {\n        if (confirm(options.removeCurrentConfirmationMsg)) {\n          removeCurrentForm($(this).data('removableClone'));\n        }\n      } else {\n        removeCurrentForm($(this).data('removableClone'));\n      }\n      if (typeof options.afterRemoveCurrent === 'function') {\n        options.afterRemoveCurrent(source);\n      }\n    };\n\n    /**\n     * Handle click on Remove last control\n     */\n    clickOnRemoveLast = function(event) {\n      event.preventDefault();\n      if (options.removeLastConfirmation) {\n        if (confirm(options.removeLastConfirmationMsg)) {\n          removeLastForm();\n        }\n      } else {\n        removeLastForm();\n      }\n    };\n\n    /**\n     * Handle click on Remove all control\n     */\n    clickOnRemoveAll = function(event) {\n      event.preventDefault();\n      if (options.removeAllConfirmation) {\n        if (confirm(options.removeAllConfirmationMsg)) {\n          removeAllForms();\n        }\n      } else {\n        removeAllForms();\n      }\n    };\n    getOrSetTemplate = function(element, attrname) {\n      var att, template;\n      template = element.attr(attrname + 'template');\n      if (template) {\n        return unescape(template);\n      }\n      att = element.attr(attrname);\n      element.attr(attrname + 'template', escape(att));\n      return att;\n    };\n\n    /**\n     * Get a form and normalize fields id and names to match the current position\n     */\n    normalizeFieldsForForm = function(form, index) {\n      form.find(formFields).each(function() {\n        var idAttr, idTemplateAttr, nameAttr, nameTemplateAttr, newIdAttr, newNameAttr, that;\n        that = $(this);\n        idTemplateAttr = getOrSetTemplate(that, 'id');\n        nameTemplateAttr = getOrSetTemplate(that, 'name');\n        idAttr = that.attr('id');\n        nameAttr = that.attr('name');\n\n        /* Normalize field name attributes */\n        newNameAttr = nameTemplateAttr.replace(options.indexFormat, index);\n        that.attr('name', newNameAttr);\n\n        /* Normalize field id attributes */\n        newIdAttr = idTemplateAttr.replace(options.indexFormat, index);\n        form.find('label[for=\\'' + idAttr + '\\']').each(function() {\n          $(this).attr('for', newIdAttr);\n        });\n        that.attr('id', newIdAttr);\n      });\n    };\n    normalizeLabelsForForm = function(form, index) {\n      setLabelForForm(form, index + 1);\n    };\n    setLabelForForm = function(form, label) {\n      form.find(options.labelSelector).html(label);\n      return true;\n    };\n    getLabelForForm = function(form) {\n      return form.find(options.labelSelector).html();\n    };\n\n    /**\n     * Show/Hide controls according to current state of the forms\n     */\n    normalizeControls = function() {\n      var removeCurrents;\n      if (hasForms()) {\n        if (getFormsCount() === 1) {\n          removeAll.hideIf();\n          removeLast.showIf();\n        } else {\n          removeAll.showIf();\n          removeLast.showIf();\n        }\n        removeCurrents = '';\n        if (options.allowRemoveCurrent) {\n          removeCurrents = source.find(options.removeCurrentSelector);\n          if (canRemoveForm()) {\n            removeCurrents.show();\n          } else {\n            removeCurrents.hide();\n          }\n        } else {\n          removeCurrents = source.find(options.removeCurrentSelector);\n          removeCurrents.hide();\n        }\n      } else {\n        removeLast.hideIf();\n        removeAll.hideIf();\n      }\n      if (!canAddForm()) {\n        add.hideIf();\n        addN.hideIf();\n      } else {\n        add.showIf();\n        addN.showIf();\n      }\n      if (!canRemoveForm()) {\n        removeLast.hideIf();\n        removeAll.hideIf();\n      }\n      if (add.css('display') !== 'none' || addN.css('display') !== 'none' || removeAll.css('display') !== 'none' || removeLast.css('display') !== 'none') {\n        controls.show();\n      } else {\n        controls.hide();\n      }\n    };\n\n    /**\n     * Show/hide noFormsMsg\n     */\n    normalizeForms = function() {\n      var form, index;\n      if (hasForms()) {\n        noFormsTemplate.hide();\n        if (options.continuousIndex) {\n          index = 0;\n          form = getFirstForm();\n          while (true) {\n            normalizeForm(form, index);\n            index++;\n            form = getNextForm(form);\n            if (form === false) {\n              break;\n            }\n          }\n        }\n      } else {\n        noFormsTemplate.show();\n      }\n    };\n    normalizeForm = function(form, index) {\n      var idTemplate, re, removeCurrent;\n      if (typeof index === 'undefined') {\n        index = getIndex();\n      }\n      idTemplate = getOrSetTemplate(form, 'id');\n      if (form.attr('id')) {\n        form.attr('id', idTemplate + index);\n      }\n      normalizeFieldsForForm(form, index);\n      normalizeLabelsForForm(form, index);\n      if (form.html().indexOf(options.indexFormat) !== -1) {\n        re = new RegExp(options.indexFormat, 'ig');\n        form.html(form.html().replace(re, index));\n      }\n      removeCurrent = form.find(options.removeCurrentSelector);\n      if (options.allowRemoveCurrent) {\n        removeCurrent.show();\n      } else {\n        removeCurrent.hide();\n      }\n      return form;\n    };\n\n    /**\n     * Normalize all (Controls, Forms)\n     */\n    normalizeAll = function() {\n      normalizeForms();\n      normalizeControls();\n    };\n\n    /**\n     * Add a new form to the collection\n     * \n     * @parameter normalize: avoid normalize all forms if not necessary\n     */\n    addForm = function(normalizeAllafterAdd, form) {\n      var id, lastForm, nestedForm, nestedForms, newForm, removeCurrentBtn, separator, x;\n      if (typeof normalizeAllafterAdd === 'undefined') {\n        normalizeAllafterAdd = true;\n      }\n      if (typeof form === 'undefined') {\n        form = false;\n      }\n      if (typeof options.beforeAdd === 'function') {\n        options.beforeAdd(source);\n      }\n      newForm = false;\n      if (form) {\n        if (typeof form === 'string') {\n          newForm = $('#' + form);\n        } else if (typeof form === 'object') {\n          newForm = form;\n        } else {\n          return false;\n        }\n        newForm.remove();\n      } else {\n        newForm = cloneTemplate();\n      }\n      if (canAddForm() && newForm) {\n        newForm = normalizeForm(newForm);\n        removeCurrentBtn = newForm.find(options.removeCurrentSelector).first();\n        removeCurrentBtn.click(clickOnRemoveCurrent);\n        removeCurrentBtn.data('removableClone', newForm);\n        newForm.data('formIndex', getIndex());\n        newForm.data('previousSeparator', false);\n        newForm.data('nextSeparator', false);\n        newForm.data('previousForm', false);\n        newForm.data('nextForm', false);\n        if (hasForms()) {\n          lastForm = getLastForm();\n          lastForm.data('nextForm', newForm);\n          newForm.data('previousForm', lastForm);\n          if (options.separator) {\n            separator = getSeparator();\n            separator.insertAfter(lastForm);\n            lastForm.data('nextSeparator', separator);\n            newForm.data('previousSeparator', separator);\n          }\n        }\n        if (options.insertNewForms === 'after') {\n          newForm.insertBefore(noFormsTemplate);\n        } else {\n          newForm.insertAfter(noFormsTemplate);\n        }\n        if (options.nestedForms.length > 0) {\n          x = 0;\n          nestedForms = [];\n          for (x in options.nestedForms) {\n            x = x;\n            if (typeof options.nestedForms[x].id !== 'undefined' && typeof options.nestedForms[x].options !== 'undefined') {\n              options.nestedForms[x].isNestedForm = true;\n              options.nestedForms[x].parentForm = source;\n              id = options.nestedForms[x].id.replace(options.indexFormat, newForm.data('formIndex'));\n              nestedForm = $('#' + id).sheepIt(options.nestedForms[x].options);\n              nestedForms.push(nestedForm);\n            }\n          }\n          newForm.data('nestedForms', nestedForms);\n        }\n        extendForm(newForm);\n        forms.push(newForm);\n\n        /**\n         * If index has to be continuous,\n         * all items are reindexed/renumbered using \n         * normalizeAll() after add a new form clone\n         */\n        if (normalizeAllafterAdd || options.continuousIndex) {\n          normalizeAll();\n        }\n        if (typeof options.afterAdd === 'function') {\n          options.afterAdd(source, newForm);\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n    addNForms = function(n, normalize) {\n      var x;\n      if (typeof n !== 'undefined') {\n        n = parseFloat(n);\n        x = 1;\n        x = 1;\n        while (x <= n) {\n          addForm(normalize);\n          x++;\n        }\n      }\n    };\n    removeLastForm = function(normalize) {\n      if (typeof normalize === 'undefined') {\n        normalize = true;\n      }\n      if (canRemoveForm()) {\n        removeForm();\n        if (normalize) {\n          normalizeAll();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n    removeAllForms = function(normalize) {\n      var x;\n      if (typeof normalize === 'undefined') {\n        normalize = true;\n      }\n      if (canRemoveAllForms()) {\n        x = [];\n        for (x in forms) {\n          x = x;\n          if (forms[x]) {\n            removeForm(forms[x]);\n          }\n        }\n        if (normalize) {\n          normalizeAll();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n    removeCurrentForm = function(formToRemove, normalize) {\n      if (typeof normalize === 'undefined') {\n        normalize = true;\n      }\n      if (canRemoveForm()) {\n        removeForm(formToRemove);\n        if (normalize) {\n          normalizeAll();\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Remove form from the index and DOM\n     */\n    removeForm = function(formToRemove) {\n      var index;\n      if (typeof formToRemove === 'undefined') {\n        formToRemove = getLastForm();\n      }\n      index = formToRemove.data('formIndex');\n\n      /**\n       * Remove separator?\n       */\n      if (formToRemove.data('previousSeparator') && formToRemove.data('nextSeparator')) {\n        formToRemove.data('previousSeparator').remove();\n        formToRemove.data('previousForm').data('nextSeparator', formToRemove.data('nextSeparator'));\n      } else if (formToRemove.data('previousSeparator') && !formToRemove.data('nextSeparator')) {\n        formToRemove.data('previousSeparator').remove();\n        formToRemove.data('previousForm').data('nextSeparator', false);\n      } else if (!formToRemove.data('previousSeparator') && formToRemove.data('nextSeparator')) {\n        formToRemove.data('nextSeparator').remove();\n        formToRemove.data('nextForm').data('previousSeparator', false);\n      }\n      if (formToRemove.data('previousForm')) {\n        formToRemove.data('previousForm').data('nextForm', formToRemove.data('nextForm'));\n      }\n      if (formToRemove.data('nextForm')) {\n        formToRemove.data('nextForm').data('previousForm', formToRemove.data('previousForm'));\n      }\n      forms[index] = false;\n      formToRemove.remove();\n      return true;\n    };\n\n    /*---------------- ITERATOR METHODS ---------------- */\n\n    /**\n     * Gets the current internal pointer\n     */\n    current = function() {\n      return ip;\n    };\n\n    /**\n     * Increment the internal pointer\n     */\n    next = function() {\n      var i, init, ip;\n      if (ip !== false) {\n        if (forms.length > 1) {\n          i = 0;\n          init = parseFloat(ip + 1);\n          i = init;\n          while (i < forms.length) {\n            if (forms[i]) {\n              ip = i;\n              return true;\n            }\n            i++;\n          }\n          return false;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Decrement the internal pointer\n     */\n    previous = function() {\n      var i, init, ip;\n      if (ip !== false) {\n        if (forms.length > 1) {\n          i = 0;\n          init = parseFloat(ip - 1);\n          i = init;\n          while (i >= 0) {\n            if (forms[i]) {\n              ip = i;\n              return true;\n            }\n            i--;\n          }\n          return false;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Brings the internal pointer to the first element\n     */\n    first = function() {\n      var ip, x;\n      ip = false;\n      if (forms.length > 0) {\n        x = 0;\n        for (x in forms) {\n          x = x;\n          if (forms[x]) {\n            ip = x;\n            return true;\n          }\n        }\n        return false;\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Brings the internal pointer to the last element\n     */\n    last = function() {\n      var i, ip;\n      ip = false;\n      if (forms.length > 0) {\n        if (forms[forms.length - 1]) {\n          ip = forms.length - 1;\n          return true;\n        } else {\n          i = 0;\n          i = forms.length - 1;\n          while (i >= 0) {\n            if (forms[i]) {\n              ip = i;\n              return true;\n            }\n            i--;\n          }\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Count the current elements\n     */\n    count = function() {\n      var count;\n      var x;\n      if (forms.length > 0) {\n        count = 0;\n        x = [];\n        for (x in forms) {\n          x = x;\n          if (forms[x]) {\n            count++;\n          }\n        }\n        return count;\n      } else {\n        return 0;\n      }\n    };\n\n    /**\n     * Sets the pointer to a new position\n     */\n    setPointerTo = function(position) {\n      var ip;\n      if (typeof position !== 'undefined') {\n        ip = getIndexForPosition(position);\n        if (ip !== false) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Get the \"real\" index for a given position\n     */\n    getIndexForPosition = function(position) {\n      var count;\n      var index, x;\n      x = 0;\n      count = 0;\n      index = false;\n      for (x in forms) {\n        x = x;\n        if (forms[x]) {\n          count++;\n          if (position === count) {\n            index = x;\n          }\n        }\n      }\n      return index;\n    };\n    getPositionForIndex = function(index) {\n      var position, x;\n      x = 0;\n      position = 0;\n      x = 0;\n      while (x <= index) {\n        if (forms[x]) {\n          position++;\n        }\n        x++;\n      }\n      return position;\n    };\n\n    /**\n     * Get the current index (Forms array length)\n     */\n    getIndex = function() {\n      return forms.length;\n    };\n\n    /*---------------- /ITERATOR METHODS ---------------- */\n    getFormsCount = function() {\n      return count();\n    };\n    getFirstForm = function() {\n      if (first() !== false) {\n        return getCurrentForm();\n      } else {\n        return false;\n      }\n    };\n    getLastForm = function() {\n      if (last() !== false) {\n        return getCurrentForm();\n      } else {\n        return false;\n      }\n    };\n    getNextForm = function(form) {\n      if (form) {\n        return form.data('nextForm');\n      } else if (current() !== false) {\n        if (next() !== false) {\n          return getCurrentForm();\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n    getPreviousForm = function(form) {\n      if (form) {\n        return form.data('previousForm');\n      } else if (current() !== false) {\n        if (previous() !== false) {\n          return getCurrentForm();\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Get the current form based on the interal pointer\n     */\n    getCurrentForm = function() {\n      if (current() !== false) {\n        return forms[current()];\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Get a form by its position\n     */\n    getForm = function(position) {\n      if (hasForms()) {\n        if (typeof position !== 'undefined') {\n          setPointerTo(position);\n          return getCurrentForm();\n        } else {\n          return getLastForm();\n        }\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Get active forms\n     */\n    getForms = function() {\n      var activeForms, x;\n      if (hasForms()) {\n        first();\n        x = 0;\n        activeForms = [];\n        x = 0;\n        while (x < getFormsCount()) {\n          activeForms.push(getCurrentForm());\n          next();\n          x++;\n        }\n        return activeForms;\n      } else {\n        return false;\n      }\n    };\n    hasForms = function() {\n      if (getFormsCount() > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    canAddForm = function() {\n      if (options.maxFormsCount === 0) {\n        return true;\n      } else {\n        if (getFormsCount() < options.maxFormsCount) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n     * Checks if can remove any form\n     */\n    canRemoveForm = function() {\n      if (getFormsCount() > options.minFormsCount) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    canRemoveAllForms = function() {\n      if (options.minFormsCount === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    isInDom = function(object) {\n      if ($('#' + object.attr('id')).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    /**\n     * Controls the whole process of data injection\n    #\n     */\n    fillData = function(index, values) {\n      var form;\n      form = '';\n      if (typeof index === 'number') {\n        index++;\n        if (index > getFormsCount()) {\n          addForm();\n        }\n        form = getForm(index);\n        fillForm(form, values);\n      } else if (typeof index === 'string') {\n        form = $('#' + index);\n        fillForm(form, values);\n      }\n      if (typeof options.afterFill === 'function') {\n        options.afterFill(source, form, values);\n      }\n    };\n    fillForm = function(form, data) {\n      var x;\n      x = 0;\n      $.each(data, function(index, value) {\n        var field, fieldsToFill, formId, formIndex, mf, mv;\n        formId = source.attr('id');\n        formIndex = form.data('formIndex');\n        if (index.indexOf('#form#') !== -1 || index.indexOf('#index#') !== -1) {\n          index = index.replace('#form#', formId);\n          index = index.replace('#index#', formIndex);\n        } else {\n          index = formId + '_' + formIndex + '_' + index;\n        }\n\n        /**\n         * Search for field (by id, by name, etc)\n         */\n        field = form.find(':input[id=\"' + index + '\"]');\n        if (field.length === 0) {\n          field = form.find(':input[name=\"' + index + '\"]');\n          if (field.length === 0) {\n            field = form.find(':input[name=\"' + index + '[]\"]');\n          }\n        }\n        if (field.length > 0) {\n          mv = false;\n          if (typeof value === 'object') {\n            mv = true;\n          }\n          mf = false;\n          if (field.length > 1) {\n            mf = true;\n          }\n          if (mf) {\n            if (mv) {\n              fieldsToFill = [];\n              fieldsToFill['fields'] = [];\n              fieldsToFill['values'] = [];\n              x = 0;\n              for (x in value) {\n                x = x;\n                fieldsToFill['fields'].push(field.filter('[value=\"' + value[x] + '\"]'));\n                fieldsToFill['values'].push(value[x]);\n              }\n              x = 0;\n              for (x in fieldsToFill['fields']) {\n                x = x;\n                fillFormField(fieldsToFill['fields'][x], fieldsToFill['values'][x]);\n              }\n            } else {\n              fillFormField(field.filter('[value=\"' + value + '\"]', value));\n            }\n          } else {\n            if (mv) {\n              x = 0;\n              for (x in value) {\n                x = x;\n                fillFormField(field, value[x]);\n              }\n            } else {\n              fillFormField(field, value);\n            }\n          }\n        } else {\n          if (typeof form.data('nestedForms') !== 'undefined') {\n            if (form.data('nestedForms').length > 0) {\n              x = 0;\n              for (x in form.data('nestedForms')) {\n                x = x;\n                if (index === form.data('nestedForms')[x].attr('id') && typeof value === 'object') {\n                  form.data('nestedForms')[x].inject(value);\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n    fillFormField = function(field, value) {\n      var type;\n      type = field.attr('type');\n      if (type === 'text' || type === 'hidden' || type === 'password') {\n        field.attr('value', value);\n        return true;\n      } else if (type === 'textarea') {\n        field.text(value);\n        return true;\n      } else if (type === 'checkbox' || type === 'radio') {\n        field.attr('checked', 'checked');\n        return true;\n      } else if (type === 'select-one' || type === 'select-multiple') {\n        field.find('option').each(function() {\n          if ($(this).text() === value || $(this).attr('value') === value) {\n            $(this).attr('selected', 'selected');\n          }\n        });\n        return true;\n      } else {\n        return false;\n      }\n    };\n    hasSeparator = function() {\n      if (options.separator !== '') {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    getSeparator = function() {\n      if (hasSeparator()) {\n        return $(options.separator);\n      } else {\n        return false;\n      }\n    };\n    setOptions = function(newOptions) {\n      options = [];\n      options = $.extend(defaults, newOptions);\n      normalizeOptions(options);\n    };\n    getOptions = function() {\n      return options;\n    };\n    initialize = function() {\n      var add, addN, addNButton, addNInput, b, controls, noFormsTemplate, removeAll, removeCurrent, removeLast, template, templateForm, x;\n      source.hide();\n\n      /**\n       * Controls\n       */\n      add = $(options.addSelector);\n      addN = $(options.addNSelector);\n      addNInput = $(options.addNInputSelector);\n      addNButton = $(options.addNButtonSelector);\n      removeLast = $(options.removeLastSelector);\n      removeCurrent = $(options.removeCurrentSelector);\n      removeAll = $(options.removeAllSelector);\n      controls = $(options.controlsSelector);\n      if (add.length === 0) {\n        options.allowAdd = false;\n      }\n      if (addN.length === 0) {\n        options.allowAddN = false;\n      }\n      if (removeLast.length === 0) {\n        options.allowRemoveLast = false;\n      }\n      if (removeAll.length === 0) {\n        options.allowRemoveAll = false;\n      }\n      extendControl(add, options.allowAdd, clickOnAdd);\n      extendControl(addN, options.allowAddN, clickOnAddN, addNButton);\n      extendControl(removeLast, options.allowRemoveLast, clickOnRemoveLast);\n      extendControl(removeAll, options.allowRemoveAll, clickOnRemoveAll);\n      add.init();\n      addN.init();\n      removeLast.init();\n      removeAll.init();\n\n      /**\n       * Templates\n       */\n      templateForm = $(options.formTemplateSelector);\n      noFormsTemplate = $(options.noFormsTemplateSelector);\n      template = templateForm.cloneWithAttribut(true);\n      templateForm.remove();\n\n      /**\n       * Forms initialization\n       */\n      x = 0;\n      if (options.pregeneratedForms.length > 0) {\n        x = 0;\n        for (x in options.pregeneratedForms) {\n          x = x;\n          addForm(false, options.pregeneratedForms[x]);\n        }\n      }\n      if (options.iniFormsCount > getFormsCount()) {\n        x = 0;\n        b = options.iniFormsCount - getFormsCount();\n        x = 1;\n        while (x <= b) {\n          addForm(false);\n          x++;\n        }\n      }\n\n      /**\n       * Data injection\n       */\n      if (options.data) {\n        source.inject(options.data);\n      }\n      normalizeAll();\n      source.show();\n    };\n\n    /**\n     * Extend passed control with new methods used by this plugin\n     */\n    extendControl = function(control, allowControlOption, onClickFunction, onClickSubControl) {\n\n      /**\n       * onClickSubControl es utilizado cuando el control principal no es el que recibe el click\n       */\n      if (typeof onClickSubControl === 'undefined') {\n        onClickSubControl = false;\n      }\n      $.extend(control, {\n        hideIf: function(duration, callback) {\n          if (allowControlOption) {\n            control.hide(duration, callback);\n          }\n        },\n        showIf: function(duration, callback) {\n          if (allowControlOption) {\n            control.show(duration, callback);\n          }\n        },\n        init: function() {\n          if (allowControlOption) {\n            if (onClickSubControl) {\n              onClickSubControl.click(onClickFunction);\n            } else {\n              control.click(onClickFunction);\n            }\n            control.show();\n          } else {\n            control.hide();\n          }\n        }\n      });\n    };\n\n    /**\n     * Extends source object with many useful methods,\n     * used to control sheepIt forms with javascript\n     */\n    extendSource = function(source) {\n      $.extend(source, {\n        getAddControl: function() {\n          return add;\n        },\n        getAddNControl: function() {\n          return addN;\n        },\n        getRemoveLastControl: function() {\n          return removeLast;\n        },\n        getRemoveAllControl: function() {\n          return removeAll;\n        },\n        getOptions: function() {\n          return getOptions();\n        },\n        getOption: function(option) {\n          return options[option];\n        },\n        setOption: function(option, value) {\n          if (typeof option !== 'undefined' && typeof value !== 'undefined') {\n            options[option] = value;\n            return options[option];\n          } else {\n            return false;\n          }\n        },\n        getForms: function() {\n          return getForms();\n        },\n        getAllForms: function() {\n          return getForms();\n        },\n        getForm: function(val) {\n          if (typeof val !== 'undefined') {\n            val++;\n          }\n          return getForm(val);\n        },\n        getLastForm: function() {\n          return getForm();\n        },\n        getFirstForm: function() {\n          first();\n          return getCurrentForm();\n        },\n        addForm: function() {\n          return addForm();\n        },\n        addNForms: function(n) {\n          return addNForms(n);\n        },\n        getFormsCount: function() {\n          return getFormsCount();\n        },\n        hasForms: function() {\n          return hasForms();\n        },\n        canAddForm: function() {\n          return canAddForm();\n        },\n        canRemoveAllForms: function() {\n          return canRemoveAllForms();\n        },\n        canRemoveForm: function() {\n          return canRemoveForm();\n        },\n        removeAllForms: function() {\n          return removeAllForms();\n        },\n        removeLastForm: function() {\n          return removeLastForm();\n        },\n        removeFirstForm: function() {\n          first();\n          return removeForm(getCurrentForm());\n        },\n        removeForm: function(val) {\n          if (typeof val !== 'undefined') {\n            val++;\n          }\n          return removeForm(getForm(val));\n        },\n        inject: function(data) {\n          $.each(data, $.proxy(fillData, source));\n        }\n      });\n    };\n\n    /**\n     * Extends cloned forms with many useful methods,\n     * used to control each form with javascript\n     */\n    extendForm = function(form) {\n      $.extend(form, {\n        setLabel: function(newLabel) {\n          return setLabelForForm(form, newLabel);\n        },\n        getLabel: function() {\n          return getLabelForForm(form);\n        },\n        inject: function(data) {\n          fillForm(form, data);\n        },\n        getNestedForms: function() {\n          return form.data('nestedForms');\n        },\n        getNestedForm: function(val) {\n          return form.data('nestedForms')[val];\n        },\n        getPosition: function() {\n          return getPositionForIndex(form.data('formIndex'));\n        },\n        getPreviousForm: function() {\n          return getPreviousForm(form);\n        },\n        getNextForm: function() {\n          return getNextForm(form);\n        },\n        removeForm: function() {\n          return removeForm(form);\n        }\n      });\n    };\n\n    /**\n     * Normalize options\n     */\n    normalizeOptions = function(options) {\n      if (options.maxFormsCount > 0) {\n        if (options.maxFormsCount < options.minFormsCount) {\n          options.maxFormsCount = options.minFormsCount;\n        }\n        if (options.iniFormsCount < options.minFormsCount || options.iniFormsCount > options.maxFormsCount) {\n          options.iniFormsCount = options.minFormsCount;\n        }\n      } else {\n        if (options.iniFormsCount < options.minFormsCount) {\n          options.iniFormsCount = options.minFormsCount;\n        }\n      }\n      if (!canRemoveAllForms()) {\n        options.allowRemoveAll = false;\n      }\n    };\n    extendSource(source);\n    add = void 0;\n    addN = void 0;\n    addNInput = void 0;\n    addNButton = void 0;\n    removeLast = void 0;\n    removeCurrent = void 0;\n    removeAll = void 0;\n    controls = void 0;\n    template = void 0;\n    templateForm = void 0;\n    noFormsTemplate = void 0;\n    formFields = 'input, checkbox, select, textarea';\n    forms = [];\n    ip = false;\n    defaults = {\n      addSelector: '#' + $(this).attr('id') + '_add',\n      addNSelector: '#' + $(this).attr('id') + '_add_n',\n      addNInputSelector: '#' + $(this).attr('id') + '_add_n_input',\n      addNButtonSelector: '#' + $(this).attr('id') + '_add_n_button',\n      removeLastSelector: '#' + $(this).attr('id') + '_remove_last',\n      removeCurrentSelector: '#' + $(this).attr('id') + '_remove_current',\n      removeAllSelector: '#' + $(this).attr('id') + '_remove_all',\n      controlsSelector: '#' + $(this).attr('id') + '_controls',\n      labelSelector: '#' + $(this).attr('id') + '_label',\n      allowRemoveLast: true,\n      allowRemoveCurrent: true,\n      allowRemoveAll: false,\n      allowAdd: true,\n      allowAddN: false,\n      removeLastConfirmation: false,\n      removeCurrentConfirmation: false,\n      removeAllConfirmation: true,\n      removeLastConfirmationMsg: 'Are you sure?',\n      removeCurrentConfirmationMsg: 'Are you sure?',\n      removeAllConfirmationMsg: 'Are you sure?',\n      formTemplateSelector: '#' + $(this).attr('id') + '_template',\n      noFormsTemplateSelector: '#' + $(this).attr('id') + '_noforms_template',\n      separator: '<div style=\"width:100%; border-top:1px solid #ff0000; margin: 10px 0px;\"></div>',\n      iniFormsCount: 1,\n      maxFormsCount: 20,\n      minFormsCount: 1,\n      incrementCount: 1,\n      noFormsMsg: 'No forms to display',\n      indexFormat: '#index#',\n      data: [],\n      pregeneratedForms: [],\n      nestedForms: [],\n      isNestedForm: false,\n      parentForm: {},\n      beforeClone: function() {},\n      afterClone: function() {},\n      beforeAdd: function() {},\n      afterAdd: function() {},\n      afterFill: function() {},\n      afterRemoveCurrent: function() {},\n      beforeRemoveCurrent: function() {},\n      insertNewForms: 'after',\n      continuousIndex: true\n    };\n    setOptions(options);\n    initialize();\n    return source;\n  };\n\n  /**\n   * JQuery original clone method decorated in order to fix an IE < 8 issue\n   * where attributs especially name are not copied\n   */\n  jQuery.fn.cloneWithAttribut = function(withDataAndEvents) {\n    var clone;\n    if (jQuery.support.noCloneEvent) {\n      return $(this).clone(withDataAndEvents);\n    } else {\n      $(this).find('*').each(function() {\n        $(this).data('name', $(this).attr('name'));\n      });\n      clone = $(this).clone(withDataAndEvents);\n      clone.find('*').each(function() {\n        $(this).attr('name', $(this).data('name'));\n      });\n      return clone;\n    }\n  };\n})(jQuery);\n"],"sourceRoot":"/source/"}